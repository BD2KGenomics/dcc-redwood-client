#!/bin/bash
set -e
script_name=`basename $0`

function log {
  logf "$*\n"
}

function logf {
  if [ $verbose -ne 0 ]; then
    printf "${script_name}: $@" >&2
  fi
}

function help {
  cat <<EOF
Usage: ${script_name} [-h] [-k] [-o] [-p] [-v] file...

For internal use only (end users use Spinnaker). Uploads individual files to Redwood.

Options
  -h show this help message
  -k use http to call server; disable https
  -p project_code to upload files under
  -o upload files with 'open' access instead of 'controlled'
  -v show verbose output
EOF
}


verbose=0
http=1
access=controlled
project_code=dev
while getopts ":hkop:v" opt; do
  case $opt in
    h)
      help
      exit
      ;;
    k)
      http=0
      ;;
    o)
      access=open
      ;;
    p)
      project_code=${OPTARG}
      ;;
    v)
      verbose=1
      log "verbose mode enabled"
      set -x
      ;;
    \?)
      log "Invalid option: -$OPTARG"
      ;;
  esac
done
shift "$((OPTIND - 1))"
log "running ${script_name} with http=${http}, verbose=${v}, project_code=${project_code}"


function main {
  # setup
  gnos_id=`uuidgen`
  log using gnos_id ${gnos_id}
  
  tmproot=`mktemp -d 2>/dev/null`
  manifest=${tmproot}/registration.txt

  # generate registration manifest
  printf 'gnos_id\tprogram_code\tfilename\tmd5\taccess\n' > ${manifest}
  for f in "$@"; do
    printf '%s\t%s\t%s\t%s\t%s\n' ${gnos_id} ${project_code} $f \
           $(md5sum $f | cut -d' ' -f 1) $access >> ${manifest}
  done

  # register upload
  dcc-metadata-client -m ${manifest} -o ${tmproot}

  #perform upload
  icgc-storage-client ${ssl_opts} upload --verify-connection false --manifest ${tmproot}/${gnos_id}
}

main "$@"
